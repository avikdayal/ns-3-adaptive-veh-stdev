%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_40node_cv_lp.output3.csv_msgStats3.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/06/13 14:19:27

%% Initialize variables.
filename = '/Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_40node_cv_lp.output3.csv_msgStats3.csv';
%filename = '/Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_40node_cv_lp.output3.csv_msgStats3.csv';

delimiter = ',';
startRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Msg_ID = dataArray{:, 1};
TxNode = dataArray{:, 2};
RxNode = dataArray{:, 3};
ttc = dataArray{:, 4};
Sys_time = dataArray{:, 5};
Msg_recv = dataArray{:, 6};
dist = dataArray{:, 7};
total=[Msg_ID TxNode RxNode ttc Sys_time Msg_recv dist];
total2=[dataArray{:, 1} dataArray{:, 2} dataArray{:, 3} dataArray{:, 4} dataArray{:, 5} dataArray{:, 6} dataArray{:, 7}];
D = sortrows(total2,[2 3 1 4]);
sit=unique([D(:,2) D(:,3)],'rows');
ttc_upper=4;
ttc_lower=3;
% for i=1:length(sit)
%     temp=[D(:,2) D(:,3)];
%     %ind=find(find(temp==sit(i,:))<length(D));
%     ind=find(temp==sit(i,:))
%     
% end
for i=1:length(sit)
    ttc_array=[];
    recv_array=[];
    for j=1:length(Msg_ID)
        temp=[D(j,2) D(j,3)];
        if(temp==sit(i,:))
            ttc_array=[ttc_array D(j,4)];
            recv_array=[recv_array D(j,6)];
        end

    end
    ind=find(ttc_array<4 & ttc_array>2);
    p=[1 find(diff(ind)>1) length(ind)];

    for k=1:length(p)-1
       ind(p(k)):ind(p(k+1))
       ind_recv=find(recv_array(ind(p(k)):ind(p(k+1)))==1);
       
    end
    %find(recv_array(ind)==1);
end

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;