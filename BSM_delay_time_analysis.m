%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_20node_5sec.output3.csv_msgStats.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/05/30 03:51:17

%% Initialize variables.
filename = '/Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_20node_5sec.output3.csv_msgStats.csv';
delimiter = ',';
startRow = 2;
filename_40 = '/Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_40node_5sec.output3.csv_msgStats.csv';
delimiter = ',';
startRow = 2;
filename_80 = '/Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_80node_5sec.output3.csv_msgStats.csv';
delimiter = ',';
startRow = 2;
filename_160 = '/Users/avikdayal/Google-Drive/PHD-Thesis/ARL-work/ns-3-beacon-rate/ns-3-dev/bsm_160node_5sec.output3.csv_msgStats.csv';
delimiter = ',';
startRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');
fileID_40 = fopen(filename_40,'r');
fileID_80 = fopen(filename_80,'r');
fileID_160 = fopen(filename_160,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
dataArray_40 = textscan(fileID_40, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
dataArray_80 = textscan(fileID_80, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
dataArray_160 = textscan(fileID_160, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);
fclose(fileID_40);
fclose(fileID_80);
fclose(fileID_160);
%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
MsgID = dataArray{:, 1};
TxNode = dataArray{:, 2};
RxNode = dataArray{:, 3};
TxPriority = dataArray{:, 4};
RxPriority = dataArray{:, 5};
Delay = dataArray{:, 6};

MsgID_20 = dataArray_40{:, 1};
TxNode_40 = dataArray_40{:, 2};
RxNode_40 = dataArray_40{:, 3};
TxPriority_40 = dataArray_40{:, 4};
RxPriority_40 = dataArray_40{:, 5};
Delay_40 = dataArray_40{:, 6};

MsgID_80 = dataArray_80{:, 1};
TxNode_80 = dataArray_80{:, 2};
RxNode_80 = dataArray_80{:, 3};
TxPriority_80 = dataArray_80{:, 4};
RxPriority_80 = dataArray_80{:, 5};
Delay_80 = dataArray_80{:, 6};

MsgID_160 = dataArray_160{:, 1};
TxNode_160 = dataArray_160{:, 2};
RxNode_160 = dataArray_160{:, 3};
TxPriority_160 = dataArray_160{:, 4};
RxPriority_160 = dataArray_160{:, 5};
Delay_160 = dataArray_160{:, 6};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;